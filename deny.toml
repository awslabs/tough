[licenses]
unlicensed = "deny"

# Deny licenses unless they are specifically listed here
copyleft = "deny"
allow-osi-fsf-free = "neither"
default = "deny"

# We want really high confidence when inferring licenses from text
confidence-threshold = 0.93

allow = [
    "Apache-2.0",
    #"BSD-2-Clause", # OK but currently unused; commenting to prevent warning
    "BSD-3-Clause",
    "BSL-1.0",
    #"CC0-1.0",  # OK but currently unused; commenting to prevent warning
    "ISC",
    "MIT",
    "OpenSSL",
    "Unlicense",
    "Zlib"
]

exceptions = [
    { name = "unicode-ident", version = "1.0.2", allow = ["MIT", "Apache-2.0", "Unicode-DFS-2016"] },
]

# https://github.com/hsivonen/encoding_rs The non-test code that isn't generated from the WHATWG data in this crate is
# under Apache-2.0 OR MIT. Test code is under CC0.
[[licenses.clarify]]
name = "encoding_rs"
expression = "(Apache-2.0 OR MIT) AND BSD-3-Clause"
license-files = [
    { path = "LICENSE-APACHE", hash = 0x18785531 },
    { path = "LICENSE-MIT", hash = 0xafaec4cb },
    { path = "LICENSE-WHATWG", hash = 0xbcb87a0c },
    { path = "COPYRIGHT", hash = 0x39f8ad31 } # this file describes what licenses apply to the sources, and when they apply
]

[[licenses.clarify]]
name = "ring"
expression = "MIT AND ISC AND OpenSSL"
license-files = [
    { path = "LICENSE", hash = 0xbd0eed23 },
]

[[licenses.clarify]]
name = "webpki"
expression = "ISC"
license-files = [
    { path = "LICENSE", hash = 0x001c7e6c },
]

[bans]
# Deny multiple versions or wildcard dependencies.
multiple-versions = "deny"
wildcards = "deny"

skip-tree = [
    { name = "h2", version = "0.3.11" }, 
    # aws sdk depends on hyper, which pulls in an older version of itoa
    { name = "hyper", version = "0.14.16" },
    # chrono pulls in an older version of time
    { name = "chrono", version = "0.4.19" },
    # structopt is using an older heck
    { name = "heck", version="0.3.3"},
]

[sources]
# Deny crates from unknown registries or git repositories.
unknown-registry = "deny"
unknown-git = "deny"
